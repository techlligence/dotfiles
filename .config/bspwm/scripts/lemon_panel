#! /bin/bash

# Received script variables
MONITOR_INDEX=$1
MONITOR_NAME=$2

# Monitor setup
MONITOR_RESOLUTION=$(xrandr | grep '*' | awk '{ print$1 }' | cut -dx -f1)
MONITOR_Y_RESOLUTION=$(echo $MONITOR_RESOLUTION | awk "{ print$"$MONITOR_INDEX" }")
OFFSETS=$(xrandr | grep " connected " | cut -d "+" -f2)
OFFSET=$(echo $OFFSETS | awk "{ print$"$MONITOR_INDEX" }")

PANEL_DIMENSIONS=""$MONITOR_Y_RESOLUTION"x32+"$OFFSET"+0"


# This section checks if the panel is already running
#if xdo id -a "$PANEL_WM_NAME" > /dev/null ; then
#	printf "%s\n" "The panel is already running." >&2
#	exit 1
#fi


# Unknown
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT


# Create a fifo file
PANEL_FIFO="/tmp/panel_fifo"$MONITOR_INDEX""
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"


# Items wanting to be read
xtitle -sf 'title%s\n' -t 50 > "$PANEL_FIFO" &

$HOME/.config/bspwm/scripts/volume-pulse -m |
while read line
do
	echo "vol"$line""
done > "$PANEL_FIFO" &

# clock -sf 'S%a %H:%M' > "$PANEL_FIFO" &

# Clock
while true; do	
	echo -e "clock$(date +"%H:%M %d/%m/%Y")"
	sleep 1s
done > "$PANEL_FIFO" &

# Disk usage
while true; do
	echo -e "disk$(df /dev/sdb2 | grep 2 | awk '{print $5}')"
	sleep 1m
done > "$PANEL_FIFO" &

# Memory usage
$HOME/.config/bspwm/scripts/mem-proc -m -i 1 -p 1 -u |
while read line
do
	echo "memory"$line""
done > "$PANEL_FIFO" &

# CPU Usage
$HOME/.config/bspwm/scripts/cpu-proc -m -i 1 -p 1 -u |
while read line
do
	echo "cpu"$line""
done > "$PANEL_FIFO" &

#while true; do
#	echo "width$(xprop -name panel | grep 'program specified minimum size' | cut -d ' ' -f 5)"
#	sleep 1
#done > "$PANEL_FIFO" &

bspc subscribe report > "$PANEL_FIFO" &


# Source the color panel file
. $HOME/.config/bspwm/scripts/panel_colors


# Launch lemonbar
$HOME/.config/bspwm/scripts/lemon_panel_bar "$MONITOR_NAME" < "$PANEL_FIFO" | lemonbar -a 32 -u 2 -n "$PANEL_WM_NAME" -g "$PANEL_DIMENSIONS" -f "Hack-Regular" -f "icomoon" -F "$COLOR_DEFAULT_FG" -B "$COLOR_DEFAULT_BG" | sh &


# Unknown
#ddwid=$(xdo id -m -a "$PANEL_WM_NAME")
#xdo above -t "$(xdo id -N Bspwm -n root | sort | head -n 1)" "$wid"
xdo above -t $(xdo id -n root) $(xdo id -n lemonbar)

wait
